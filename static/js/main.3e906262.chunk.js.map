{"version":3,"sources":["QuestService.js","Trader.js","QuestLog.js","index.js"],"names":["base58Characters","split","UpdateQuest","quest","traderName","traders","a","selectedTrader","selectTrader","activeQuest","quests","find","q","name","state","updateState","trader","sharedResponse","reduce","uri","guy","guyIndex","characters","map","questIndex","length","Error","undefined","filter","char","join","shareUrl","URL","window","location","origin","searchParams","set","history","replaceState","href","AppStarter","fetch","then","response","json","data","catch","err","console","log","search","stateParam","URLSearchParams","substring","get","numberRegex","x","group","test","Number","indexOf","LoadProgress","Box","styled","div","select","onClick","src","avatar","alt","Wrapper","Content","updateQuest","key","objectives","not_required_for_kappa","Fragment","MainWrapper","TraderWrapper","QuestWrapper","BackgroundBlur","App","useState","setTraders","pickTrader","updatedTraders","useEffect","r","Trader","QuestLog","render","document","getElementById"],"mappings":"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","file":"static/js/main.3e906262.chunk.js","sourcesContent":["// List of characters that are valid in a URL\r\nconst base58Characters = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ-_+!*$\".split('');\r\n\r\nexport function GetQuests() {\r\n  return fetch('./data.json')\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    return data;\r\n  }).catch((err) => console.log(err));\r\n}\r\n\r\nexport async function UpdateQuest(quest, traderName, traders) {\r\n  const selectedTrader = selectTrader(traders, traderName);\r\n   const activeQuest = selectedTrader.quests.find((q) => q.name === quest.name);\r\n   activeQuest.state = !activeQuest.state;\r\n   updateState(traders);\r\n\r\n   return [...traders];\r\n}\r\n\r\nfunction ShareProgress(data) {\r\n  return data.reduce((uri, guy, guyIndex) => {\r\n    const characters = guy.quests\r\n        .map((quest, questIndex) => {\r\n          if (questIndex > base58Characters.length) {\r\n            throw new Error(\"Index too high, can't be mapped to a base58 character\")\r\n          }\r\n\r\n          return quest.state ? base58Characters[questIndex] : undefined\r\n        })\r\n        .filter((char) => char !== undefined);\r\n\r\n    // Exclude guys without quest modifications, making the URI smaller\r\n    if (characters.length === 0) {\r\n      return uri\r\n    }\r\n\r\n    return uri + `${guyIndex}${characters.join('')}`\r\n  }, \"\")\r\n}\r\n\r\nexport function LoadProgress(uri, data) {\r\n  const numberRegex = /(\\d+)/;\r\n  let guyIndex = 0;\r\n\r\n  // you have to account for indexes that are above 9 and thus have multiple characters\r\n  for (const group of uri.split(numberRegex).filter(x => x !== '' && x !== undefined)) {\r\n    if (numberRegex.test(group)) {\r\n      guyIndex = Number(group)\r\n    } else {\r\n      for (const char of group.split('')) {\r\n        const questIndex = base58Characters.indexOf(char);\r\n        if (questIndex === -1) {\r\n          throw new Error('Invalid URI supplied, character not recognized')\r\n        }\r\n\r\n        if (!data[guyIndex]) {\r\n          throw new Error('Invalid index for guy')\r\n        }\r\n\r\n        data[guyIndex].quests[questIndex].state = true\r\n      }\r\n    }\r\n  }\r\n\r\n  return data\r\n}\r\n\r\nfunction selectTrader(traders, traderName) {\r\n  return traders.find((trader) => {\r\n    return trader.name === traderName;\r\n  });\r\n}\r\n\r\nexport function updateState(traders) {\r\n  const sharedResponse = ShareProgress(traders);\r\n  let shareUrl = new URL(`${window.location.origin}/tarkov-questlog`);\r\n  shareUrl.searchParams.set('state', sharedResponse);\r\n  window.history.replaceState('', '', shareUrl.href);\r\n}\r\n\r\nexport function AppStarter() {\r\n  return GetQuests().then((traders) => {\r\n    if (window.location.search.length > 0) {\r\n      const stateParam = new URLSearchParams(window.location.search.substring(1));\r\n      if (stateParam.get('state').length > 0) {\r\n        return LoadProgress(stateParam.get('state'), traders);\r\n      }\r\n      return traders;\r\n    }\r\n    return traders;\r\n  })\r\n}\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Box = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n  cursor: pointer;\r\n  margin: 8px 0;\r\n  width: 80px;\r\n  height: 80px;\r\n  img {\r\n    width: 100%;\r\n  }\r\n  &:hover {\r\n    img {\r\n      box-shadow: 2px 2px 18px 0px rgba(255,255,255,1);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ({ trader, select }) => {\r\n  return (\r\n    <Box onClick={() => select(trader)}>\r\n      <img src={trader.avatar} alt={trader.name} />\r\n    </Box>\r\n  )\r\n};\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Wrapper = styled.div`\r\n    display: flex;\r\n`;\r\n\r\nconst Content = styled.div`\r\n    width: 50%;\r\n    padding: 7px;\r\n`;\r\n\r\nconst Box = styled.div`\r\n  border: 1px solid blue;\r\n`;\r\n\r\nexport default ({ quests, traderName, updateQuest }) => {\r\n    return (\r\n        <Wrapper>\r\n            <Content>\r\n                <p>Incomplete Quests</p>\r\n                {quests.length > 0 ? quests.map((quest) => {\r\n                    return !quest.state ? (\r\n                        <Box key={quest.name} onClick={() => updateQuest(quest, traderName)}>\r\n                            <p>{quest.name}</p>\r\n                            {quest.objectives.map((q) => <p key={q}>{q}</p>)}\r\n                            {quest.not_required_for_kappa ? <p>Not Required for Kappa</p> : <p>Required for Kappa</p>}\r\n                        </Box>\r\n                    ) : null\r\n                }) : <p>We have no quests yet for this trader</p>}\r\n            </Content>\r\n            <Content>\r\n                <p>Completed Quests</p>\r\n                {quests.length > 0 ? quests.map((quest) => {\r\n                    return quest.state ? (\r\n                        <Box key={quest.name + 'completed'} onClick={() => updateQuest(quest, traderName)}>\r\n                            <p>{quest.name}</p>\r\n                            {quest.objectives.map((q) => <p key={q}>{q}</p>)}\r\n                            {quest.state ? <p>True</p> : <p>False</p>}\r\n                        </Box>\r\n                    ) : null\r\n                }) : <React.Fragment />}\r\n            </Content>\r\n        </Wrapper>\r\n    )\r\n};\r\n","import React, { useState, useEffect } from 'react';\nimport { render } from 'react-dom';\nimport styled from 'styled-components';\nimport './style.css';\nimport {UpdateQuest, AppStarter} from './QuestService';\nimport Trader from './Trader';\nimport QuestLog from './QuestLog';\n\nconst MainWrapper = styled.div`\n  display: flex;\n  overflow: hidden;\n`;\n\nconst TraderWrapper = styled.div`\n  position: relative;\n  z-index: 2;\n  display: flex;\n  flex-wrap: wrap;\n  color: #fff;\n  width: 100px;\n  height: 80vh;\n  padding: 10px 10px 0;\n`;\n\nconst QuestWrapper = styled.div`\n  position: relative;\n  z-index: 2;\n  width: 100%;\n  height: 95vh;\n  padding: 30px 5px 0;\n  color: #fff;\n  overflow-y: scroll;\n`;\n\nconst BackgroundBlur = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  width: 100vw;\n  height: 100vh;\n  background-image: url(\"./background.png\");\n  background-position: center;\n  background-repeat: no-repeat;\n  background-size: cover;\n  filter: blur(5px);\n`;\n\nfunction App() {\n  const [traders, setTraders] = useState([]);\n  const [selectedTrader, selectTrader] = useState(null);\n\n  async function pickTrader(trader) {\n    selectTrader(trader);\n  }\n\n  async function updateQuest(quest, traderName) {\n    await UpdateQuest(quest, traderName, traders).then((updatedTraders) => {\n      setTraders(updatedTraders);\n    })\n  }\n\n  useEffect(() => {\n    AppStarter().then((r) => setTraders(r));\n  }, []);\n\n  return (\n    <MainWrapper>\n      <TraderWrapper>\n        {traders.map((trader) => {\n          return (\n            <Trader key={trader.name} trader={trader} select={pickTrader} />\n          )\n        })}\n      </TraderWrapper>\n      <QuestWrapper>\n        {selectedTrader ? <QuestLog quests={selectedTrader.quests} traderName={selectedTrader.name} updateQuest={updateQuest} /> : <p>Pick a trader</p>}\n      </QuestWrapper>\n      <BackgroundBlur />\n    </MainWrapper>\n  );\n}\n\nrender(<App />, document.getElementById('root'));\n"],"sourceRoot":""}